// <auto-generated />
using System;
using AM.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AMContext))]
    partial class AMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Domain.Cagnotte", b =>
                {
                    b.Property<int>("CagnotteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CagnotteId"));

                    b.Property<DateTime>("DateLimite")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntrepriseId")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SommeDemandée")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("CagnotteId");

                    b.HasIndex("EntrepriseId");

                    b.ToTable("Cagnottes");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entreprise", b =>
                {
                    b.Property<int>("EntrepriseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntrepriseId"));

                    b.Property<string>("AdresseEntreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailEntreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomEntreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntrepriseId");

                    b.ToTable("Entreprise");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Participant", b =>
                {
                    b.Property<int>("ParticipantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipantID"));

                    b.Property<string>("MailParticipant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParticipantID");

                    b.ToTable("Participant");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Participation", b =>
                {
                    b.Property<int>("ParticipantFK")
                        .HasColumnType("int");

                    b.Property<int>("CagnotteFK")
                        .HasColumnType("int");

                    b.Property<int>("Montant")
                        .HasColumnType("int");

                    b.HasKey("ParticipantFK", "CagnotteFK");

                    b.HasIndex("CagnotteFK");

                    b.ToTable("Participation");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Cagnotte", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Entreprise", "Entreprise")
                        .WithMany("cagnottes")
                        .HasForeignKey("EntrepriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entreprise");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Participation", b =>
                {
                    b.HasOne("ApplicationCore.Domain.Cagnotte", "MYcagnotte")
                        .WithMany("participations")
                        .HasForeignKey("CagnotteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Domain.Participant", "MYparticipant")
                        .WithMany("participations")
                        .HasForeignKey("ParticipantFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MYcagnotte");

                    b.Navigation("MYparticipant");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Cagnotte", b =>
                {
                    b.Navigation("participations");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Entreprise", b =>
                {
                    b.Navigation("cagnottes");
                });

            modelBuilder.Entity("ApplicationCore.Domain.Participant", b =>
                {
                    b.Navigation("participations");
                });
#pragma warning restore 612, 618
        }
    }
}
